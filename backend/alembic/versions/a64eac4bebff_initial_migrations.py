"""initial migrations

Revision ID: a64eac4bebff
Revises:
Create Date: 2024-10-23 16:02:19.099839

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a64eac4bebff'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('idempotency_key', sa.String(length=120), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('status', postgresql.ENUM('active', 'inactive', 'deleted', 'banned', name='user_status_enum'), server_default='active', nullable=False),
    sa.Column('online_status', postgresql.ENUM('online', 'away', 'offline', name='user_online_status_enum'), server_default='online', nullable=False),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('idempotency_key', name=op.f('uq_users_idempotency_key')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('profiles',
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('recovery_email', sa.String(), nullable=True),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('profession', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('DOB', sa.Date(), nullable=True),
    sa.Column('avatar_url', sa.String(length=200), nullable=True),
    sa.Column('facebook_link', sa.String(length=200), nullable=True),
    sa.Column('x_link', sa.String(length=200), nullable=True),
    sa.Column('instagram_link', sa.String(length=200), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_profiles_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profiles'))
    )
    op.create_index(op.f('ix_profiles_created_at'), 'profiles', ['created_at'], unique=False)
    op.create_index(op.f('ix_profiles_id'), 'profiles', ['id'], unique=False)
    op.create_index(op.f('ix_profiles_user_id'), 'profiles', ['user_id'], unique=True)
    op.create_table('rooms',
    sa.Column('room_name', sa.String(length=130), nullable=False),
    sa.Column('creator_id', sa.String(length=60), nullable=False),
    sa.Column('room_type', postgresql.ENUM('public', 'private', 'direct_message', name='room_type_enum'), server_default='private', nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('messages_deletable', sa.Boolean(), nullable=False),
    sa.Column('idempotency_key', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default='FALSE', nullable=False),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name=op.f('fk_rooms_creator_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rooms')),
    sa.UniqueConstraint('idempotency_key', name='uq_room_idempotency_key')
    )
    op.create_index(op.f('ix_rooms_created_at'), 'rooms', ['created_at'], unique=False)
    op.create_index(op.f('ix_rooms_creator_id'), 'rooms', ['creator_id'], unique=False)
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_table('socialregisters',
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('sub', sa.String(length=60), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('id_token', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_socialregisters_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_socialregisters'))
    )
    op.create_index(op.f('ix_socialregisters_created_at'), 'socialregisters', ['created_at'], unique=False)
    op.create_index(op.f('ix_socialregisters_id'), 'socialregisters', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('room_id', sa.String(length=60), nullable=False),
    sa.Column('content', sa.String(length=1000), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default='FALSE', nullable=False),
    sa.Column('chat_type', sa.Enum('public', 'private', 'direct_message', name='chat_type_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_messages_room_id_rooms'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_messages_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_messages'))
    )
    op.create_index(op.f('ix_messages_created_at'), 'messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=True)
    op.create_index(op.f('ix_messages_room_id'), 'messages', ['room_id'], unique=False)
    op.create_index(op.f('ix_messages_user_id'), 'messages', ['user_id'], unique=False)
    op.create_table('roominvitations',
    sa.Column('room_id', sa.String(length=60), nullable=False),
    sa.Column('inviter_id', sa.String(length=60), nullable=False),
    sa.Column('invitee_id', sa.String(length=60), nullable=False),
    sa.Column('invitation_status', postgresql.ENUM('pending', 'accepted', 'declined', 'ignored', name='invitation_status_enum'), server_default='pending', nullable=False),
    sa.Column('room_type', postgresql.ENUM('public', 'private', 'direct_message', name='room_type_enum'), nullable=False),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], name=op.f('fk_roominvitations_invitee_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], name=op.f('fk_roominvitations_inviter_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_roominvitations_room_id_rooms'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roominvitations')),
    sa.UniqueConstraint('room_id', 'invitee_id', name='uq_room_invitation_room_id_invitee_id')
    )
    op.create_index(op.f('ix_roominvitations_created_at'), 'roominvitations', ['created_at'], unique=False)
    op.create_index(op.f('ix_roominvitations_id'), 'roominvitations', ['id'], unique=False)
    op.create_index(op.f('ix_roominvitations_invitee_id'), 'roominvitations', ['invitee_id'], unique=False)
    op.create_index(op.f('ix_roominvitations_inviter_id'), 'roominvitations', ['inviter_id'], unique=False)
    op.create_index(op.f('ix_roominvitations_room_id'), 'roominvitations', ['room_id'], unique=False)
    op.create_table('roommembers',
    sa.Column('user_id', sa.String(length=60), nullable=False),
    sa.Column('room_id', sa.String(length=60), nullable=False),
    sa.Column('invited_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('room_type', postgresql.ENUM('public', 'private', 'direct_message', name='room_type_enum'), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('idempotency_key', sa.String(), nullable=True),
    sa.Column('id', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_roommembers_room_id_rooms'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_roommembers_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roommembers')),
    sa.UniqueConstraint('room_id', 'user_id', name='uq_room_member_room_id_user_id')
    )
    op.create_index(op.f('ix_roommembers_created_at'), 'roommembers', ['created_at'], unique=False)
    op.create_index(op.f('ix_roommembers_id'), 'roommembers', ['id'], unique=False)
    op.create_index(op.f('ix_roommembers_room_id'), 'roommembers', ['room_id'], unique=False)
    op.create_index(op.f('ix_roommembers_user_id'), 'roommembers', ['user_id'], unique=False)
    op.drop_table('celery_taskmeta')
    op.drop_table('celery_tasksetmeta')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.drop_index(op.f('ix_roommembers_user_id'), table_name='roommembers')
    op.drop_index(op.f('ix_roommembers_room_id'), table_name='roommembers')
    op.drop_index(op.f('ix_roommembers_id'), table_name='roommembers')
    op.drop_index(op.f('ix_roommembers_created_at'), table_name='roommembers')
    op.drop_table('roommembers')
    op.drop_index(op.f('ix_roominvitations_room_id'), table_name='roominvitations')
    op.drop_index(op.f('ix_roominvitations_inviter_id'), table_name='roominvitations')
    op.drop_index(op.f('ix_roominvitations_invitee_id'), table_name='roominvitations')
    op.drop_index(op.f('ix_roominvitations_id'), table_name='roominvitations')
    op.drop_index(op.f('ix_roominvitations_created_at'), table_name='roominvitations')
    op.drop_table('roominvitations')
    op.drop_index(op.f('ix_messages_user_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_room_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_created_at'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_socialregisters_id'), table_name='socialregisters')
    op.drop_index(op.f('ix_socialregisters_created_at'), table_name='socialregisters')
    op.drop_table('socialregisters')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_creator_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_created_at'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_profiles_user_id'), table_name='profiles')
    op.drop_index(op.f('ix_profiles_id'), table_name='profiles')
    op.drop_index(op.f('ix_profiles_created_at'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
